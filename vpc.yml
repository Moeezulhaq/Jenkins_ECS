AWSTemplateFormatVersion: 2010-09-09

Parameters:
  MyKeyName:
    Default: Moeez.Nv
    Description: Select the key name from the list
    Type: AWS::EC2::KeyPair::KeyName
  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: "us-east-1a"
    AllowedValues:
      - us-east-2a
      - us-east-2b    
      - us-east-2c
      - us-east-1a
      - us-east-1b
      - us-east-1c
  MyInstanceType:
    Description: select EC2 instance type from list.
    Type: String
    Default: "t2.micro"
    AllowedValues:
      - t2.micro
      - t2.small
      - t3.micro

  MyCIDR:
    Description: select CIDR for VPC.
    Type: String
    Default: "10.0.0.0/16"

  publicsubnetcidr:
    Description: select CIDR for VPC.
    Type: String
    Default: "10.0.1.0/24"

  privatesubnetcidr:
    Description: select CIDR for VPC.
    Type: String
    Default: "10.0.2.0/24"    



Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref MyCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
       - Key: Name
         Value: VPC
  
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My SG with Alltraffic
      VpcId:
        Ref: VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '0'          
          ToPort: '65535'
          CidrIp: 0.0.0.0/0

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: InsternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
     VpcId:
      Ref: VPC
     InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref publicsubnetcidr
      AvailabilityZone: !Ref MyAvailabilityZone
      Tags:
      - Key: Name
        Value:  PublicSubnet
    
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock: !Ref privatesubnetcidr
      AvailabilityZone: !Ref MyAvailabilityZone
      Tags:
      - Key: Name
        Value: PrivateSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGateway
    Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref InternetGateway

  

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: VPC
      Tags:
      - Key: Name
        Value: PrivateRouteTable

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NATGateway
  
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  NATGateway:
     Type: AWS::EC2::NatGateway
     Properties:
        AllocationId:
           Fn::GetAtt:
           - EIP
           - AllocationId
        SubnetId: !Ref PublicSubnet
        Tags:
        - Key: Name
          Value: NATGateway
  EIP:
     DependsOn: InternetGateway
     Type: AWS::EC2::EIP
     Properties:
        Domain: VPC


